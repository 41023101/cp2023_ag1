<h1>About</h1>
<p>倉儲:<a href="https://github.com/41023101/cp2023_ag1">https://github.com/41023101/cp2023_ag1</a> </p>
<p>組別網站:<a href="https://41023101.github.io/cp2023_ag1/content/index.html">https://41023101.github.io/cp2023_ag1/content/index.html</a> </p>
<p><span style="background-color: #ffff00;">組長網頁</span>:</p>
<p>41023101:<a href="https://41023101.github.io/cp2023/content/index.html">https://41023101.github.io/cp2023/content/index.html</a> </p>
<p><span style="background-color: #ffff00;">組員網頁</span>:</p>
<p>41023131:<a href="https://george0324.github.io/cp2023/content/index.html">https://george0324.github.io/cp2023/content/index.html</a> </p>
<p>41023141:<a href="https://41023141.github.io/cp2023/content/index.html">https://41023141.github.io/cp2023/content/index.html</a> </p>
<p>41223101:<a href="https://yan41223101.github.io/cp2023/content/index.html">https://yan41223101.github.io/cp2023/content/index.html</a> </p>
<p>41223104:<a href="https://41223104.github.io/cp2023/content/index.html">https://41223104.github.io/cp2023/content/index.html</a> </p>
<p>41223105:<a href="https://41223105.github.io/cp2023/content/index.html">https://41223105.github.io/cp2023/content/index.html</a> </p>
<p>41223106:<a href="https://cya41223106.github.io/cp2023/content/index.html">https://cya41223106.github.io/cp2023/content/index.html</a> </p>
<p>41223120:<a href="https://41223120.github.io/cp2023/content/index.html">https://41223120.github.io/cp2023/content/index.html</a> </p>
<p>41223153:<a href="https://41223153.github.io/cp2023/content/index.html">https://41223153.github.io/cp2023/content/index.html</a> </p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<h1>progress</h1>
<p><span style="background-color: #ffff00;">w7</span></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYSoaecwXNlEg6KPxXltyK4BfgCwjLoxbtgvOGUlgjOx2w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=GIvuYT">如何建立各組協同網站說明影片</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EX1-yNrRODZFgaer3c34nXEBSdqo5HNepKT1HmDKLpwsFQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=rYtLhr">如何將協同網站設定協同者後, import 進入 Replit 說明影片</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EXNCbyBWtGRCuO_4RBxsB80B4nROo5aZ6O0DFhRw9bDNFw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=981Q1G">說明如何進行基本的 gd 繪圖</a></p>
<p>進行九人一排分組, 期中成績預計送出個人期望成績.</p>
<p>cp2023 計算機程式教學內容 check list:</p>
<ol>
<li>各學員要有 github 帳號, 且將 user name 登錄到<span> </span><a href="https://raw.githubusercontent.com/mdecycu/studlist/main/2023fall/1a.txt">1a</a><span> </span>與<span> </span><a href="https://raw.githubusercontent.com/mdecycu/studlist/main/2023fall/1b.txt">1b</a><span> </span>的倉儲, 內容必須與個人的 github 帳號相同 (<a href="https://mde.tw/studlist/2023fall/1a.txt">1a</a><span> </span>與<span> </span><a href="https://mde.tw/studlist/2023fall/1b.txt">1b</a>), 各用戶若修改帳號, 必須透過 Pull Requests 要求將新資料合併 (<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EVLjdagaxnVMk8wE5HO8QSUB1qGBFeAnHirQLSxNNWjSHQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=iopvVp">Pull Requests 說明</a>).</li>
<li>各學員要有<span> </span><span>Replit</span><span> </span>帳號且與 Github connect, 能夠從 Replit 啟動網頁編輯, 轉為靜態網站內容後, 送回 Github 的個人 cp2023 倉儲與網站. (還有兩種方式可以維護倉儲與網站,<span> </span><span>近端</span>與<span>自架主機</span>上進行內容維護)</li>
<li>目前會經常使用的 git add, git commit, git push, git pull, git status, git branch, git checkout</li>
<li>C 程式的繪圖 - Gnuplot, gd, raylib (<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUjYvX4V6-1GoeM3sEQXn1IBwMZ3jzKnqYJ0OPZLD8gL_A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=AdBz8j">近端繪圖說明</a>) </li>
</ol>
<p><span><span style="background-color: #ffff00;">w8</span> 之前所指令的程式練習作業</span>:</p>
<p><a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">上課內容</a>中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w2-w5.html">w2-w5</a><span> </span>週任務中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w6-w7.html">w6-w7</a><span> </span>週任務中的練習一與練習二</p>
<p>請利用 C 結合 gd 繪圖程式庫, 畫出<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_China">PROC</a>,<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_Kingdom">United Kingdom</a>,<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_Japan">Japan</a><span> </span>與<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_South_Korea">South Korea</a><span> </span>Flags.</p>
<p>各分組成員協同將<span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼) 內容整理後, 放入各分組網站.</p>
<p><span><span style="background-color: #ffff00;">w9</span> 程式練習</span>:</p>
<p>2b w8 作業: 請根據 <a href="https://mde.tw/cadnote/downloads/cad2023_2b_w8.txt">cad2023_2b_w8.txt</a> 檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單 2a: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a>, 2b: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a>)</p>
<p>假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取:</p>
<p><a href="https://mde.tw/cpnote/downloads/get_stud_num_from_last_data.py">get_stud_num_from_last_data.py</a> (若採 Brython 編寫, 可以直接<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f9f2fd6819ae9553d51990901aa694073d51439a/get_stud_num_from_last_data.py">列出結果</a>, 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫:<span> </span><a href="https://mde.tw/cpnote/downloads/c_parse_last_cp2023.7z">c_parse_last_cp2023.7z</a>)</p>
<p><span style="background-color: #ffff00;">w11</span>: 針對 s1511 伺服器, 新增別名 (在 DNS 術語中稱為 CNAME) s, 因此可以透過<span> </span><a href="https://s.cycu.org/~pj2022/cpnote">https://s.cycu.org/~pj2022/cpnote</a><span> </span>擷取工作站室中的課堂筆記網頁.</p>
<p>使用 Letsencrypy 中的<span> </span><span>certbot certonly -d s1511.cycu.org -d s.cycu.org</span><span> </span>指令, 執行之前可以利用 sudo /etc/init.d/nginx stop 關掉 nginx, 並在上述擴充網域數位簽章的過程, 讓 certbot 指令啟動 local web server 進行主機認證, 即透過登記在 DNS 伺服器中的 IPv6 address 確認主機位址.</p>
<p>擴增伺服器別名後, 以 sudo /etc/init.d/nginx start 重新啟動全球資訊網伺服器, 並且以 sudo /etc/init.d/stunnel4 restart 重新啟動 https 代理伺服器.</p>
<p>項目1: 如何快速設定電腦輔助設計室中的網路 - 採 IPv6 網路設定.</p>
<p>請檢查隨身碟中的網路設定程式, 確認帶有可攜程式環境以及網路設定相關檔案.</p>
<p>目的是能夠在啟動隨身系統之後, 可以透過 rsa private key 以 SSH 取下個人倉儲, 並能啟動編輯後轉檔, 擁有推送回 github 的權限.</p>
<p>各組組長能夠在取下分組倉儲後, 以個人 IPv6 位址啟動後, 允許分組組員登入修改網頁內容, 並透過組長的 rsa private key 推送回 github.</p>
<p>個人與分組組員能在近端編寫 C 程式, 完成編譯連結後將程式碼與結果放入網頁, 並編寫相關心得報告.</p>
<p>以上近端操作流程, 也可以在 s1511 與 Replit 伺服器上進行個人與分組倉儲及網頁的改版.</p>
<p><a href="https://mde.tw/cpnote/downloads/w11_1a.7z">w11_1a.7z</a> (第十一週 1a 上課時建立的共用網路設定檔案)</p>
<p>項目2: 請分別利用 Replit、s1511.cycu.org 或 localhost 維護個人與分組的網站內容, 並比較不同方法開發計算計程式的優缺點.</p>
<p><span>Replit</span><span> </span>必須先在 Github 安裝 Replit Application 授權之後, 再 import 倉儲.</p>
<p>import 倉儲後, 必須先設定 Run 執行內容, 取下 submodule, 並安裝倉儲編輯所需的模組以及設定 secrets 頁面中的 config 變數後, 才能啟動編輯網頁.</p>
<p><span>s1511</span><span> </span>則需要先設定 keys 與 session config, 然後才能將倉儲以 SSH clone 至個人帳號下, 修改個人或分組所分配到的內部連網埠號後, 以 python3 server.py 執行網頁編輯. 也可透過 acp 設法讓動態與靜態網站內容同步.</p>
<p><span>localhost</span><span> </span>則可以使用 s1511 中的 private key, 經由 puttygen 轉檔後使用, 以 SSH clone 至個人隨身碟後, 可以利用 cms 啟動編輯網站, 修改內容並轉為靜態網站後, 以 acp 將改版資料新增提交推送到 Github. 若修改倉儲中的 init.py, 置入所在電腦的外部 IPv6 位址, 則可以 cms 啟動後, 修改管理者密碼, 讓其他組員連線至所啟動的動態或靜態網站內容.</p>
<p>各學員在以上採多個不同方式維護個人與分組網站的過程, 可以在改版之前先行 git pull, 以減少合併的內容.</p>
<p>項目3: 程式練習:</p>
<p><span>w8 之前所指令的程式練習作業</span>:</p>
<p><a href="https://mde.tw/cpnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">上課內容</a>中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w2-w5.html">w2-w5</a><span> </span>週任務中的 Exercises</p>
<p><a href="https://mde.tw/cpnote/content/w6-w7.html">w6-w7</a><span> </span>週任務中的練習一與練習二</p>
<p>請利用 C 結合 gd 繪圖程式庫, 畫出<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_China">PROC</a>,<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_the_United_Kingdom">United Kingdom</a>,<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_Japan">Japan</a><span> </span>與<span> </span><a href="https://en.wikipedia.org/wiki/Flag_of_South_Korea">South Korea</a><span> </span>Flags.</p>
<p>各分組成員協同將<span> </span><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼) 內容整理後, 放入各分組網站.</p>
<p><span style="background-color: #ffff00;">w12</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZNZ2_9DTYxLgP8k-6mK7ecBWpTNivviMP5bzt_IXGqKeA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=PXC5Ry">w12_1b_1.mp4</a><span> </span>(說明如何在 Replit, s.cycu.org 與 Windows 中執行 C 程式)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ecz860nqrz9NrCNGlDdWlzwB8gENnoBaQK7XZUnmySzYfg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=KeyBMP">w12_1b_2.mp4</a><span> </span>(說明如何在 Replit, s.cycu.org 與 Windows 中執行 C 程式的 gd 繪圖)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZMnF8bRmx1Eib2KpLGr5W4BRigUieEJoTtWO18TrOWLEQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=a5sN8P">w12_1b_3.mp4</a><span> </span>(說明如何在 Windows 共用 s.cycu.org 上的 id_rsa 私鑰, 轉為 .ppk 之後, 可以再結合 .gitconfig 中的 http.proxy 設定, 以 SSH 加上 https 取下個人或分組倉儲後, 在 Windows 啟動編輯改版後推至 Github)</p>
<p><span style="background-color: #ffff00;">w13</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZTqrS1UshVDkaosG3YV5V4BKXvRwCyo1r3WYUBx00QJXA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=q245wt">w13_1a_1.mp4</a><span> </span>(四分鐘之後沒有聲音, 內容請參考下一個影片)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EXOrNCd-Hs1FpbJv4Kz91kIBG7HtYsjfE97mGpZohSyF1Q?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=ol3tj2">w13_1a_2.mp4</a><span> </span>(補充說明第一部影片的內容)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbsVr7phg5JFkSsLXID1GiIBdzBmDNYteNaDXidQF0W1kQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=ZOjBGo">w13_1a_3.mp4</a><span> </span>(說明從 C, Javascript 與 Python 在計算機程式的應用歷程)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ed92k666LwRNn3DJfcHOjf0B6uoPHjlP07JfbFdPoulE2g?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=CiVa5y">w13_1a_4.mp4</a><span> </span>(說明如何在近端建立 OpenSSH 格式的 public key, putty 格式的 private 並且配合 putty session 讓使用者可以將倉儲 git clone 到近端維護)</p>
<p>利用 C 程式語法, 採<span>數值分析方法 (Numerical Analysis Methods) 解常微分方程式</span>, 並將分析結果, 以<span> </span><a href="http://www.gnuplot.info/">Gnuplot</a><span> </span>繪出 png 圖檔.</p>
<p><span>SciTE指令</span>:</p>
<p>[<span>http</span>]<br/>    proxy =<span> </span><a href="http://p4.cycu.org:3128/">http://p4.cycu.org:3128</a></p>
<p>也可以透過命令列中輸入 git config --global http.proxy<span> </span><a href="http://p4.cycu.org:3128/">http://p4.cycu.org:3128</a> 取得</p>
<p>這是設定 git 指令需要使用 http 或 https 協定擷取 cmsimde 時, 假如網路只支援 IPv6, 就必須透過代理主機連線到目前只支援 IPv4 的 github.com</p>
<p>[<span>user</span>]<br/>    name = 你的 github 帳號<br/>    email = 登記在 github 帳號的 email</p>
<p>是在 git commit -m "提交訊息" 時綁定身分用</p>
<p>[<span>safe]</span><br/>    directory = *</p>
<p>則是宣告目前所使用的檔案目錄都是 safe</p>
<p>[http "https://github.com"]<br/>    sslVerify = false</p>
<p>表示當連線到 github.com 時所使用的 key 不用登記在 Windows 操作系統中</p>
<p>[<span>pull</span>]<br/>    rebase = false</p>
<p>表示 git pull 時, 並不使用 rebase, 而是直接 fetch 遠端資料, 並且進行 merge 合併</p>
<p><span style="background-color: #ffff00;">w14</span>:</p>
<p><span>延續 </span><a href="https://mde.tw/cpnote/content/w10-w11">https://mde.tw/cpnote/content/w10-w11</a><span><span> </span>中的項目執行內容.</span></p>
<p><span><span style="background-color: #ffff00;">w15</span>:</span></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EWUYTIkcWNhOnjA3hSzN_1wBIAdnzXUDt5jpOkNXFYov_A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=2sE7p1">w15_1a_1.mp4</a><span> </span>(說明課程總結, 並且更新可以開發 C 靜態與動態繪圖的程式環境)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYsWiu9QtpBLsSgDO59-D68Bcxv5maTWIWjoBtCXuVKzMA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=kULfmc">w15_1a_2.mp4</a><span> </span>(在 Replit, s.cycu.org 與 localhost 中保持與 github 倉儲同步)</p>
<p>課堂考試題目:</p>
<p>1) 根據<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVcefUI2zPpAmP6lnLWLEAoBCBznMnvFpsNE-1VVFGvVZQ?e=goiPpP&amp;isSPOFile=1">roc_list_coord_flag.7z</a><span> </span>程式內容所印出的六組 ABED 等繪製 ROC 國旗白日圖案中的菱形四個關鍵點, 請直接在青天與滿地紅的圖案中, 利用白色作為畫線顏色, 將第二組的 ABED 等四個點的座標, 以直線相連.<br/><br/>2) 承上題, 請列出第二組 ABED 的四條直線與白日中的大圓所相交 (intersect) 的四個點座標.<br/><br/>請在個人的 w15 頁面中完成上列兩個題目的操作後, 製作一個 Wink 影片說明操作過程與結果, 完成後請將個人網頁連結提供本對談的回應中(即回應到 CP2023 的團隊貼文下方).</p>
<p><span><span style="background-color: #ffff00;">w16</span> Final Project</span><span> </span>(<a href="https://cdn.numerade.com/ask_images/89e908f5a6864bfd8a3fdfd4453675c7.jpg">圖片來源</a>):</p>
<p><img alt="" height="288" src="https://mde.tw/cpnote/images/cp2023_final_project1.png" width="400"/></p>
<p><img alt="" height="71" src="https://mde.tw/cpnote/images/cp2023_final_project2.png" width="400"/></p>
<p>1. 請利用 C + gd 繪圖程式庫重新繪製 Figure 1 的質量、彈簧與阻尼器與左右牆面的配置圖.</p>
<p>2. 當 m1 的起始位置為 1, m2 的起始位置為 -0.5 且 m1, m2 的起始速度都為 0 的情況下, 請利用 C + gnuplot 繪製從 t=0 到 t=10 秒之間, m1 與 m2 的位置以及速度相對於時間的趨勢圖.</p>
<h1>gd prac</h1>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_497925">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="cpp comments">// Declare the rotation function</code></div>
<div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">rotateFilledPolygon(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">x_orig, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y_orig, </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_ang, gdPoint *points, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num_points) {</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle_rad = rotation_ang * M_PI / 180.0;</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(i = 0; i &lt; num_points; i++) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x = points[i].x - x_orig;</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y = points[i].y - y_orig;</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">        </code><code class="cpp plain">points[i].x = x_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad) - y * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">        </code><code class="cpp plain">points[i].y = y_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad) + y * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number17 index16 alt2"><code class="cpp plain">}</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 800;</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = 600;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"hellogd1.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 255);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">black = gdImageColorAllocate(img, 0, 0, 0);</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255);</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, blue);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageLine(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2 + 100, blue);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4;</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = points[0].x + 100;</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = points[0].y;</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = points[1].x;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = points[1].y + 100;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = points[2].x - 100;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = points[2].y;</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp plain">rotateFilledPolygon((</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4 + 50, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4 + 50, 45.0, points, 4);</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePolygon(img, points, 4, black);</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points2[4];</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 3;</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2;</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].x = points2[0].x + 100;</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].y = points2[0].y;</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].x = points2[1].x;</code></div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].y = points2[1].y + 100;</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].x = points2[2].x - 150;</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].y = points2[2].y;</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number68 index67 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">    </code><code class="cpp plain">rotateFilledPolygon((</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 3 + 50, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2 + 50, 30.0, points2, 4);</code></div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(img, points2, 4, red);</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number72 index71 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number76 index75 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number77 index76 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img caption="false" height="300" src="https://41023101.github.io/cp2023/images/hellogd1.png" width="400"/></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_575417">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="cpp comments">// Declare the rotation function</code></div>
<div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">rotateFilledPolygon(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">x_orig, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y_orig, </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_ang, gdPoint *points, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num_points) {</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle_rad = rotation_ang * M_PI / 180.0;</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(i = 0; i &lt; num_points; i++) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x = points[i].x - x_orig;</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y = points[i].y - y_orig;</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">        </code><code class="cpp plain">points[i].x = x_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad) - y * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">        </code><code class="cpp plain">points[i].y = y_orig + (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(x * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle_rad) + y * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle_rad));</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number17 index16 alt2"><code class="cpp plain">}</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 800;</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = 600;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/hellogd2.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 255);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">black = gdImageColorAllocate(img, 0, 0, 0);</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255);</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, blue);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageEllipse(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4, red);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageLine(img, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 2, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2 + 100, blue);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4;</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = points[0].x + 100;</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = points[0].y;</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = points[1].x;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = points[1].y + 100;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = points[2].x - 100;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = points[2].y;</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function multiple times</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 4; i++) {</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">        </code><code class="cpp plain">rotateFilledPolygon((</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 4 + 50, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height * 3 / 4 + 50, 30.0, points, 4);</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">        </code><code class="cpp plain">gdImagePolygon(img, points, 4, black);</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points2[4];</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)width / 3;</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[0].y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)height / 2;</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].x = points2[0].x + 100;</code></div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[1].y = points2[0].y;</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].x = points2[1].x;</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[2].y = points2[1].y + 100;</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].x = points2[2].x - 150;</code></div>
<div class="line number68 index67 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points2[3].y = points2[2].y;</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces"> </code> </div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Call the rotation function multiple times</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 12; i++) {</code></div>
<div class="line number72 index71 alt1"><code class="cpp spaces">        </code><code class="cpp comments">//rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">        </code><code class="cpp plain">rotateFilledPolygon(500, 200, 30.0, points2, 4);</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">        </code><code class="cpp plain">gdImageFilledPolygon(img, points2, 4, red);</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number76 index75 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number77 index76 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number79 index78 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number80 index79 alt1"><code class="cpp spaces"> </code> </div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number82 index81 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="300" src="https://41023101.github.io/cp2023/images/hellogd2.png" width="400"/></p>
<h1>flag</h1>
<h2>ROC</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_182565">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China</code></div>
<div class="line number2 index1 alt1"><code class="cpp comments">// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621</code></div>
<div class="line number3 index2 alt2"><code class="cpp comments">// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library</code></div>
<div class="line number4 index3 alt1"><code class="cpp comments">// https://www.rapidtables.com/web/color/RGB_Color.html</code></div>
<div class="line number5 index4 alt2"><code class="cpp comments">// 幾何形狀著色與繪圖練習</code></div>
<div class="line number6 index5 alt1"><code class="cpp comments">// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number9 index8 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_roc_flag(gdImagePtr img);</code></div>
<div class="line number12 index11 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_white_sun(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color);</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// width 3: height 2</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 1200;</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 國旗長寬比為 3:2</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width*2.0 / 3.0);</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">draw_roc_flag(img);</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/roc_flag_in_gd.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Error opening the output file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number34 index33 alt1"><code class="cpp plain">}</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_roc_flag(gdImagePtr img) {</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = gdImageSX(img);</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = gdImageSY(img);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red, white, blue;</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/4);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(height/4);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// gdImageFilledEllipse 需以長寬方向的 diameter 作圖</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 由於中央白日圓形的半徑為青天寬度的 1/8</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">sun_radius = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/8);</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white_circle_dia = sun_radius;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 中央藍色圓形半徑為中央白日的 1又 2/15</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">blue_circle_dia = white_circle_dia +  white_circle_dia*2/15;</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces">    </code><code class="cpp plain">red = gdImageColorAllocate(img, 255, 0, 0); </code><code class="cpp comments">// 紅色</code></div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="cpp comments">// 白色</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp plain">blue = gdImageColorAllocate(img, 0, 0, 149); </code><code class="cpp comments">// 藍色</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據畫布大小塗上紅色長方形區域</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width, height, red);</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 青天面積為整面國旗的 1/4, 也是採用長方形塗色</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width/2.0), (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(height/2.0), blue);</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 先設法以填色畫出六個白色堆疊菱形</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">    </code><code class="cpp plain">draw_white_sun(img, center_x, center_y, sun_radius, white);</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 利用一個藍色大圓與白色小圓畫出藍色環狀</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);</code></div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);</code></div>
<div class="line number65 index64 alt2"> </div>
<div class="line number66 index65 alt1"><code class="cpp plain">}</code></div>
<div class="line number67 index66 alt2"> </div>
<div class="line number68 index67 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_white_sun(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">center_y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">sun_radius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color) {</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位</code></div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">float</code> <code class="cpp plain">deg = M_PI/180;</code></div>
<div class="line number72 index71 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">float</code> <code class="cpp plain">sr = sun_radius/</code><code class="cpp functions bold">tan</code><code class="cpp plain">(75*deg);</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">ax, ay, bx, by, dx, dy, ex, ey;</code></div>
<div class="line number76 index75 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[4];</code></div>
<div class="line number77 index76 alt2"><code class="cpp spaces">    </code><code class="cpp comments">/* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp comments">ax = center_x;</code></div>
<div class="line number79 index78 alt2"><code class="cpp spaces">    </code><code class="cpp comments">ay = center_y - sun_radius;</code></div>
<div class="line number80 index79 alt1"><code class="cpp spaces">    </code><code class="cpp comments">bx = center_x - sun_radius*tan(15*deg);</code></div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp comments">by = center_y;</code></div>
<div class="line number82 index81 alt1"><code class="cpp spaces">    </code><code class="cpp comments">ex = center_x;</code></div>
<div class="line number83 index82 alt2"><code class="cpp spaces">    </code><code class="cpp comments">ey = center_y + sun_radius;</code></div>
<div class="line number84 index83 alt1"><code class="cpp spaces">    </code><code class="cpp comments">dx = center_x + sun_radius*tan(15*deg);</code></div>
<div class="line number85 index84 alt2"><code class="cpp spaces">    </code><code class="cpp comments">dy = center_y;</code></div>
<div class="line number86 index85 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// AB</code></div>
<div class="line number87 index86 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, ax, ay, bx, by, color);</code></div>
<div class="line number88 index87 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// BE</code></div>
<div class="line number89 index88 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, bx, by, ex, ey, color);</code></div>
<div class="line number90 index89 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// ED</code></div>
<div class="line number91 index90 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, ex, ey, dx, dy, color);</code></div>
<div class="line number92 index91 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// DA</code></div>
<div class="line number93 index92 alt2"><code class="cpp spaces">    </code><code class="cpp comments">gdImageLine(img, dx, dy, ax, ay, color);</code></div>
<div class="line number94 index93 alt1"><code class="cpp spaces">    </code><code class="cpp comments">*/</code></div>
<div class="line number95 index94 alt2"><code class="cpp spaces">    </code><code class="cpp plain">ax = center_x;</code></div>
<div class="line number96 index95 alt1"><code class="cpp spaces">    </code><code class="cpp plain">ay = center_y - sun_radius;</code></div>
<div class="line number97 index96 alt2"><code class="cpp spaces">    </code><code class="cpp plain">bx = center_x - sun_radius*</code><code class="cpp functions bold">tan</code><code class="cpp plain">(15*deg);</code></div>
<div class="line number98 index97 alt1"><code class="cpp spaces">    </code><code class="cpp plain">by = center_y;</code></div>
<div class="line number99 index98 alt2"><code class="cpp spaces">    </code><code class="cpp plain">ex = center_x;</code></div>
<div class="line number100 index99 alt1"><code class="cpp spaces">    </code><code class="cpp plain">ey = center_y + sun_radius;</code></div>
<div class="line number101 index100 alt2"><code class="cpp spaces">    </code><code class="cpp plain">dx = center_x + sun_radius*</code><code class="cpp functions bold">tan</code><code class="cpp plain">(15*deg);</code></div>
<div class="line number102 index101 alt1"><code class="cpp spaces">    </code><code class="cpp plain">dy = center_y;</code></div>
<div class="line number103 index102 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域</code></div>
<div class="line number104 index103 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=1;i&lt;=6;i++){</code></div>
<div class="line number105 index104 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// A</code></div>
<div class="line number106 index105 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[0].x = ax+sun_radius*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number107 index106 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[0].y = ay+sun_radius-sun_radius*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number108 index107 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// B</code></div>
<div class="line number109 index108 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[1].x = bx+sr-sr*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number110 index109 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[1].y = by-sr*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number111 index110 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// E</code></div>
<div class="line number112 index111 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[2].x = ex-sun_radius*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number113 index112 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[2].y = ey-(sun_radius-sun_radius*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i));</code></div>
<div class="line number114 index113 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// D</code></div>
<div class="line number115 index114 alt2"><code class="cpp spaces">    </code><code class="cpp plain">points[3].x = dx-(sr-sr*</code><code class="cpp functions bold">cos</code><code class="cpp plain">(30*deg*i));</code></div>
<div class="line number116 index115 alt1"><code class="cpp spaces">    </code><code class="cpp plain">points[3].y = dy+sr*</code><code class="cpp functions bold">sin</code><code class="cpp plain">(30*deg*i);</code></div>
<div class="line number117 index116 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 對菱形區域範圍塗色</code></div>
<div class="line number118 index117 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(img, points, 4, color);</code></div>
<div class="line number119 index118 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 在菱形區域外圍畫線, 明確界定菱形範圍</code></div>
<div class="line number120 index119 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePolygon(img, points, 4, color);</code></div>
<div class="line number121 index120 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number122 index121 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="200" src="https://41023101.github.io/cp2023/images/roc_flag_in_gd.png" width="300"/></p>
<h2>US</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_225073">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_usa_flag(gdImagePtr img);</code></div>
<div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_star(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color, </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_angle);</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 800;</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(width / 1.9);</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp plain">draw_usa_flag(img);</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/usa_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"打开输出文件时出错。\n"</code><code class="cpp plain">);</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(img);</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number28 index27 alt1"><code class="cpp plain">}</code></div>
<div class="line number29 index28 alt2"> </div>
<div class="line number30 index29 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_usa_flag(gdImagePtr img) {</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = gdImageSX(img);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = gdImageSY(img);</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red, white, blue;</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 国旗颜色</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp plain">red = gdImageColorAllocate(img, 178, 34, 52); </code><code class="cpp comments">// 红色条纹</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="cpp comments">// 白色条纹</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp plain">blue = gdImageColorAllocate(img, 60, 59, 110); </code><code class="cpp comments">// 蓝色矩形</code></div>
<div class="line number38 index37 alt1"> </div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">stripe_height = height / 13;</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">stripe_width = width;</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">star_size = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(0.0308 * height); </code><code class="cpp comments">// 星星大小</code></div>
<div class="line number42 index41 alt1"> </div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">y = 0; y &lt; height; y += stripe_height) {</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(y / stripe_height % 2 == 0) {</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">            </code><code class="cpp plain">gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, red);</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">        </code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">            </code><code class="cpp plain">gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, white);</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">        </code><code class="cpp plain">}</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number50 index49 alt1"> </div>
<div class="line number51 index50 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(img, 0, 0, width * 2 / 5, stripe_height * 7, blue);</code></div>
<div class="line number52 index51 alt1"> </div>
<div class="line number53 index52 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">star_spacing_x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(0.129 * height); </code><code class="cpp comments">// 横向星星之间的间距</code></div>
<div class="line number54 index53 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">star_spacing_y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(0.054 * height); </code><code class="cpp comments">// 纵向星星之间的间距</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">star_start_x = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(0.125 * height); </code><code class="cpp comments">// 星星的起始X位置</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">star_start_y = (</code><code class="cpp color1 bold">int</code><code class="cpp plain">)(0.0485 * height); </code><code class="cpp comments">// 星星的起始Y位置</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row = 0; row &lt; 9; row++) {</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starsPerRow = (row % 2 == 0) ? 6 : 5;</code></div>
<div class="line number60 index59 alt1"> </div>
<div class="line number61 index60 alt2"><code class="cpp spaces">        </code><code class="cpp comments">// 计算2、4、6和8排星星的偏移量</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">offset_x = (row % 2 == 0) ? star_spacing_x / -2 : 0;</code></div>
<div class="line number63 index62 alt2"> </div>
<div class="line number64 index63 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">star = 0; star &lt; starsPerRow; star++) {</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">            </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x = star_start_x + star * star_spacing_x + offset_x;</code></div>
<div class="line number66 index65 alt1"> </div>
<div class="line number67 index66 alt2"><code class="cpp spaces">            </code><code class="cpp comments">// 旋转角度（以弧度为单位）</code></div>
<div class="line number68 index67 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_angle = M_PI / 5; </code><code class="cpp comments">// 忘記多少度的旋转</code></div>
<div class="line number69 index68 alt2"> </div>
<div class="line number70 index69 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y = star_start_y + row * star_spacing_y;</code></div>
<div class="line number71 index70 alt2"><code class="cpp spaces">            </code><code class="cpp plain">draw_star(img, x, y, star_size, white, rotation_angle);</code></div>
<div class="line number72 index71 alt1"><code class="cpp spaces">        </code><code class="cpp plain">}</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number74 index73 alt1"><code class="cpp plain">}</code></div>
<div class="line number75 index74 alt2"> </div>
<div class="line number76 index75 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">draw_star(gdImagePtr img, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color, </code><code class="cpp color1 bold">double</code> <code class="cpp plain">rotation_angle) {</code></div>
<div class="line number77 index76 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint points[10];</code></div>
<div class="line number78 index77 alt1"> </div>
<div class="line number79 index78 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 10; i++) {</code></div>
<div class="line number80 index79 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle = M_PI / 2 + i * 2 * M_PI / 10 + rotation_angle;</code></div>
<div class="line number81 index80 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">radius = (i % 2 == 0) ? size : size / 2;</code></div>
<div class="line number82 index81 alt1"><code class="cpp spaces">        </code><code class="cpp plain">points[i].x = x + radius * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle);</code></div>
<div class="line number83 index82 alt2"><code class="cpp spaces">        </code><code class="cpp plain">points[i].y = y + radius * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle);</code></div>
<div class="line number84 index83 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number85 index84 alt2"> </div>
<div class="line number86 index85 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 用指定的颜色填充星星</code></div>
<div class="line number87 index86 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(img, points, 10, color);</code></div>
<div class="line number88 index87 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="200" src="https://41023101.github.io/cp2023/images/usa_flag.png" width="380"/></p>
<h2>Japan</h2>
<p><a href="https://41023101.github.io/cp2023/downloads/japan.c">gd_japan_flag.c</a></p>
<p><img alt="" height="200" src="https://41023101.github.io/cp2023/images/japan_flag.png" width="300"/></p>
<h2>China</h2>
<p><a href="https://41023101.github.io/cp2023/downloads/china.c">gd_china_flag.c</a></p>
<p><img alt="" height="200" src="https://41023101.github.io/cp2023/images/proc_flag.png" width="300"/></p>
<h2>UK</h2>
<p><a href="https://41023101.github.io/cp2023/downloads/UK.c">gd_uk_flag.c</a></p>
<p><img alt="" height="150" src="https://41023101.github.io/cp2023/images/uk_flag.png" width="300"/></p><h1>c_ex</h1>
<p><span style="background-color: #ffff00;">C 程式練習一</span>:</p>
<p><span>請從 </span><a href="https://www.w3resource.com/c-programming-exercises/">https://www.w3resource.com/c-programming-exercises/</a><span><span> </span>網頁中自選 10 個練習範例, 分別在 Replit, Windows 與 Linux (or macOS) 中執行後, 取下執行畫面放入個人的 Github Pages 網頁 (即帳號.github.io 網站), 以<span> </span><span>ANSIC</span><span> </span>作為頁面標題並詳細說明每一行的程式語法.</span></p>
<p><span><span style="background-color: #ffff00;">C 程式練習二</span>:</span></p>
<p>請從 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>(需要下載密碼)與 <a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link">Introduction to C</a> (經由校園網路或 VPN 下載)電子書中各擷取 10 個 C 程式範例, 分別:</p>
<p>1. 在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Go 類編譯方式執行.</p>
<p>2. 在可攜程式環境中以 SciTE + Tiny C Compiler 編譯系統, 使用 Tools - Compile 編譯連結後取得 a.out, 然後在命令列中以 a.out 執行.</p>
<p>3. 在 Replit 全球資訊網 IDE 環境中的 Shell 頁面, 以 cc ex1.c 產生可執行檔案 a.out, 並以 ./a.out 執行, 或者以 cc ex1.c -o ex1 指定編譯連結後的可執行檔案名稱為 ex1 後, 以 ./ex1 執行.</p><h1>個人學習心得</h1>
<p>41023101:除了維護個人的倉儲及編輯網頁，老師利用協同讓我們學習分工，協同最主要就是像外面業界的專案，也像我們的專題製作，如果協同少了任何一位人力，在分工方面就會需要更多的時間來完成。</p>
<p>41023131:</p>
<h4>這堂課從一開始到現在收穫很多，雖然我是重修這門課，但學到了不同的方式去了解python程式。<span>在第一次修課時，可能是因為種種原因，也包括自己沒有很認真參與課堂，這次多了一個機會去改正和成長，在更積極地與與同學討論程式和過程中遇到的麻煩，解決問題。最後，這次重修讓我意識到學習是一個持續不斷的過程，雖然我重修了這門課，相反，這是一個機會去再更了解這堂課所教的python語言。</span></h4>
<p>41023141:這堂課雖然是重修，但依然學到了不同的東西，像replit之前因為要付錢才能使用，但這學期前面一到兩個月期前面有免費開放使用，雖然只有一小段時間，但還是知道了一些有關replit的操作，以及C語言的修改。</p>
<p>41223101:這堂課讓我學到不少，包括網路的設定、replit的創建和更新以及在GitHub可以擁有自己的倉儲，在這期間我也意識到團隊合作的重要性，我也會努力盡一份力希望自己能幫助到團隊裡的各位，一起讓我們的網頁更有完整性。</p>
<p>41223104:經過半學期以來的課程，接觸到了c語言和如何利用Replit來編寫程式並且使用寫出的程式來畫出想要的圖形，還有使用Github維護自己個人的倉儲網站，更新自己的學習進度。一開始因為第一次接觸，上課內容遠比我預想的還要艱難，完全搞不懂要做什麼，所以只能到處求助老師和同學幫忙。在這當中也覺得老師和同學很厲害，怎麼能理解以及編寫這麽多複雜不易懂的程式，我自己也想要理解和擁有自己編寫了解程式的能力，所以跟著老師和同學的腳步慢慢學習。到後來短短的半學期過去了，但我漸漸地卻越來越了解這門課的學習方向。不只是老師平時上課的講解以及教學，更多的是透過向同學詢問、上網查詢相關術語解釋還有一起討論。一天一天的了解、學習，累積下來讓我在課堂中可以更加簡單上手，對這門課程越來越有信心！我認為上這門課程收穫的不僅只是學習這些知識而已，還有自己與同學如何一起解決難題、分享想法、討論也培養了耐心、細心還有想要學習的一顆心，在半學期的學習之中相當受益良多，可說是非常難能可貴！</p>
<p>41223105:這學期快要結束了，我終於對計算機程式這門課總算有一點概念，加上協同裡有學長姐們，他們協助我們非常多，這跟一開學的效率差很多，透過協同，我們可以共享資源、知識、技能，以達到共同的目標，以及促進團隊合作，增進效率。協同<span>是指不同個體之間合作共同達成某個目標或完成特定任務的過程，不只自己要</span>盡力地把功課用好，團隊也是很重要的。</p>
<p>41223106:這門課程分組的目的是讓我們能學習合作，想要獲得好成果避免不了的是互相，每個人都有自己的強項，能在需要的時候給予建議、並共同完成，這就是團隊的重要性，這個網頁是我們這組同學所一起留下合作的痕跡，讓我們一起記錄了我們學習的內容，包括建立倉儲、網路設定、網頁編輯、程式的使用。</p>
<p>41223120:剛開始學習這門課真的相當痛苦，後來有去詢問同學們的意見，比較有一個方向的感覺，對自己也比較重拾了一點信心，在計算機程式課程中學到了IPv4和IPv6的網路設定及github等等的程式，這些程式在外來用到的機率也會大幅提升，因為幾千幾萬個東西聚集在一起做總總的計算電腦程式的出錯率絕對是最低的，但也要練習打程式的速度及邏輯， 讓我收益良多，也懂得遇到困難該如何解決的精神，也有許多課程單元需要團隊合作，也讓我學到團隊互助的精神。</p>
<p>41223153:接觸到從未使用過的程式語言，並使用程式語言建立GitHub倉儲、網頁，使用replit來維護和更新自己的網頁，再把每次上課的作業和學習成果，放上網頁並留下紀錄。在這門課程中，從一開始的陌生到能熟練操作，在這段過程中也經歷了失敗與難關，這時就能提出和組員們一起討論，在組員遇到困難時，也及時幫助對方，這也展現出團隊合作的重要性，畢竟【人多力量大，柴多火焰高】。</p><h1>note</h1>
<p>內容為上課相關設定</p>
<h2>clone</h2>
<p><span>帳號連接</span>:</p>
<p>利用<span><span><span>命令提示字元</span>(小黑窗)</span>連接個人倉儲</span>編輯網頁:</p>
<p>開啟小黑窗ipv6</p>
<p>打 git clone --recurse-submodules<span>空格</span><span>複製貼上下列圖片網址</span></p>
<p><span>完成後enter</span></p>
<p></p>
<p><img alt="" height="350" src="https://41023101.github.io/cp2023/images/%E5%80%89%E5%84%B2.jpg" width="500"/></p>
<p><span>token設定</span></p>
<p>Personal access tokens</p>
<p>開啟github帳號點選右上頭像並點選Settings<br/>點選Developer settings<br/>點選Personal access tokens<br/>點選Generate new token(classic)<br/>Note 名稱(任意)<br/>Expiration 到期(建議90天)<br/>勾選repo(第一個)<br/>點選最下面的Generate token<br/>複製產生出來的token<br/>開啟可攜系統<br/>開啟欲設Personal access tokens的資料夾<br/>點開<span>.git</span>(要開隱藏項目才看的到)<br/>將裡面的<span>congif拉到SciTE</span>(灰色圓球)<br/>將複製的字串貼在github.com的前面再加上<span>@並存檔(CTRL+S)</span><br/>Personal access tokens就設定完成</p>
<p>最後再回到可攜系統打cms enter後，即可順利開啟近端編輯個人網頁</p>
<h2>ssh</h2>
<p>下載putty</p>
<p>在putty資料夾內開啟puttygen.exe生成一把鑰匙</p>
<p>將key儲存在github帳號內(開啟設定點選ssh)</p>
<p>回到puttygen.exe按save private key即可</p>
<p>再開啟putty</p>
<p>Host Name輸入github.com</p>
<p>Saved Sessions輸入自己的學號</p>
<p><img alt="" height="399" src="https://41023101.github.io/cp2023/images/1.png" width="397"/></p>
<p>點選proxy改設定</p>
<p><img alt="" height="402" src="https://41223136.github.io/cp2023/images/putty1.png" width="400"/></p>
<p>再點選ssh內的Auth裡面Credentials</p>
<p><img alt="" height="396" src="https://41023101.github.io/cp2023/images/2.png" width="399"/></p>
<p>匯出即可</p>