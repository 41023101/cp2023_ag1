var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲: https://github.com/41023101/cp2023_ag1 \xa0 \n 組別網站: https://41023101.github.io/cp2023_ag1/content/index.html \xa0 \n 組員網頁: \n 41023101: https://41023101.github.io/cp2023/content/index.html \xa0 \n 41023131: https://george0324.github.io/cp2023/content/index.html \xa0 \n 41023141: https://41023141.github.io/cp2023/content/index.html \xa0 \n 41223101: https://yan41223101.github.io/cp2023/content/index.html \xa0 \n 41223104: https://41223104.github.io/cp2023/content/index.html \xa0 \n 41223105: https://41223105.github.io/cp2023/content/index.html \xa0 \n 41223106: https://cya41223106.github.io/cp2023/content/index.html \xa0 \n 41223120: https://41223120.github.io/cp2023/content/index.html \xa0 \n 41223153: https://41223153.github.io/cp2023/content/index.html \xa0', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'progress', 'text': 'w7 \n 如何建立各組協同網站說明影片 \n 如何將協同網站設定協同者後, import 進入 Replit 說明影片 \n 說明如何進行基本的 gd 繪圖 \n 進行九人一排分組, 期中成績預計送出個人期望成績. \n cp2023 計算機程式教學內容 check list: \n \n 各學員要有 github 帳號, 且將 user name 登錄到 \xa0 1a \xa0 與 \xa0 1b \xa0 的倉儲, 內容必須與個人的 github 帳號相同 ( 1a \xa0 與 \xa0 1b ), 各用戶若修改帳號, 必須透過 Pull Requests 要求將新資料合併 ( Pull Requests 說明 ). \n 各學員要有 \xa0 Replit \xa0 帳號且與 Github connect, 能夠從 Replit 啟動網頁編輯, 轉為靜態網站內容後, 送回 Github 的個人 cp2023 倉儲與網站. (還有兩種方式可以維護倉儲與網站, \xa0 近端 與 自架主機 上進行內容維護) \n 目前會經常使用的 git add, git commit, git push, git pull, git status, git branch, git checkout \n C 程式的繪圖 - Gnuplot, gd, raylib ( 近端繪圖說明 )\xa0 \n \n w8  之前所指令的程式練習作業 : \n 上課內容 中的 Exercises \n w2-w5 \xa0 週任務中的 Exercises \n w6-w7 \xa0 週任務中的練習一與練習二 \n 請利用 C 結合 gd 繪圖程式庫, 畫出 \xa0 PROC , \xa0 United Kingdom , \xa0 Japan \xa0 與 \xa0 South Korea \xa0 Flags. \n 各分組成員協同將 \xa0 jsliu_c_programming.pdf \xa0 (需要下載密碼) 內容整理後, 放入各分組網站. \n w9  程式練習 : \n 2b w8 作業: 請根據\xa0 cad2023_2b_w8.txt \xa0檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單\xa02a:\xa0 0838 , 2b:\xa0 0851 ) \n 假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取: \n get_stud_num_from_last_data.py \xa0(若採 Brython 編寫, 可以直接 列出結果 , 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫: \xa0 c_parse_last_cp2023.7z ) \n w11 : 針對 s1511 伺服器, 新增別名 (在 DNS 術語中稱為 CNAME) s, 因此可以透過 \xa0 https://s.cycu.org/~pj2022/cpnote \xa0 擷取工作站室中的課堂筆記網頁. \n 使用 Letsencrypy 中的 \xa0 certbot certonly -d s1511.cycu.org -d s.cycu.org \xa0 指令, 執行之前可以利用 sudo /etc/init.d/nginx stop 關掉 nginx, 並在上述擴充網域數位簽章的過程, 讓 certbot 指令啟動 local web server 進行主機認證, 即透過登記在 DNS 伺服器中的 IPv6 address 確認主機位址. \n 擴增伺服器別名後, 以 sudo /etc/init.d/nginx start 重新啟動全球資訊網伺服器, 並且以 sudo /etc/init.d/stunnel4 restart 重新啟動 https 代理伺服器. \n 項目1: 如何快速設定電腦輔助設計室中的網路 - 採 IPv6 網路設定. \n 請檢查隨身碟中的網路設定程式, 確認帶有可攜程式環境以及網路設定相關檔案. \n 目的是能夠在啟動隨身系統之後, 可以透過 rsa private key 以 SSH 取下個人倉儲, 並能啟動編輯後轉檔, 擁有推送回 github 的權限. \n 各組組長能夠在取下分組倉儲後, 以個人 IPv6 位址啟動後, 允許分組組員登入修改網頁內容, 並透過組長的 rsa private key 推送回 github. \n 個人與分組組員能在近端編寫 C 程式, 完成編譯連結後將程式碼與結果放入網頁, 並編寫相關心得報告. \n 以上近端操作流程, 也可以在 s1511 與 Replit 伺服器上進行個人與分組倉儲及網頁的改版. \n w11_1a.7z \xa0(第十一週 1a 上課時建立的共用網路設定檔案) \n 項目2: 請分別利用 Replit、s1511.cycu.org 或 localhost 維護個人與分組的網站內容, 並比較不同方法開發計算計程式的優缺點. \n Replit \xa0 必須先在 Github 安裝 Replit Application 授權之後, 再 import 倉儲. \n import 倉儲後, 必須先設定 Run 執行內容, 取下 submodule, 並安裝倉儲編輯所需的模組以及設定 secrets 頁面中的 config 變數後, 才能啟動編輯網頁. \n s1511 \xa0 則需要先設定 keys 與 session config, 然後才能將倉儲以 SSH clone 至個人帳號下, 修改個人或分組所分配到的內部連網埠號後, 以 python3 server.py 執行網頁編輯. 也可透過 acp 設法讓動態與靜態網站內容同步. \n localhost \xa0 則可以使用 s1511 中的 private key, 經由 puttygen 轉檔後使用, 以 SSH clone 至個人隨身碟後, 可以利用 cms 啟動編輯網站, 修改內容並轉為靜態網站後, 以 acp 將改版資料新增提交推送到 Github. 若修改倉儲中的 init.py, 置入所在電腦的外部 IPv6 位址, 則可以 cms 啟動後, 修改管理者密碼, 讓其他組員連線至所啟動的動態或靜態網站內容. \n 各學員在以上採多個不同方式維護個人與分組網站的過程, 可以在改版之前先行 git pull, 以減少合併的內容. \n 項目3: 程式練習: \n w8 之前所指令的程式練習作業 : \n 上課內容 中的 Exercises \n w2-w5 \xa0 週任務中的 Exercises \n w6-w7 \xa0 週任務中的練習一與練習二 \n 請利用 C 結合 gd 繪圖程式庫, 畫出 \xa0 PROC , \xa0 United Kingdom , \xa0 Japan \xa0 與 \xa0 South Korea \xa0 Flags. \n 各分組成員協同將 \xa0 jsliu_c_programming.pdf \xa0 (需要下載密碼) 內容整理後, 放入各分組網站.', 'tags': '', 'url': 'progress.html'}, {'title': 'note', 'text': '內容為上課相關設定', 'tags': '', 'url': 'note.html'}, {'title': 'clone', 'text': '帳號連接 : \n 利用 命令提示字元 (小黑窗) 連接個人倉儲 編輯網頁: \n 開啟小黑窗ipv6 \n 打\xa0git clone --recurse-submodules 空格 複製貼上下列圖片網址 \n 完成後enter \n \n \n token設定 \n Personal access tokens \n 開啟github帳號點選右上頭像並點選Settings 點選Developer settings 點選Personal access tokens 點選Generate new token(classic) Note 名稱(任意) Expiration 到期(建議90天) 勾選repo(第一個) 點選最下面的Generate token 複製產生出來的token 開啟可攜系統 開啟欲設Personal access tokens的資料夾 點開 .git (要開隱藏項目才看的到) 將裡面的 congif拉到SciTE (灰色圓球) 將複製的字串貼在github.com的前面再加上 @並存檔(CTRL+S) Personal access tokens就設定完成 \n 最後再回到可攜系統打cms enter後，即可順利開啟近端編輯個人網頁 \n', 'tags': '', 'url': 'clone.html'}, {'title': 'ssh', 'text': '下載putty \n 在putty資料夾內開啟puttygen.exe生成一把鑰匙 \n 將key儲存在github帳號內(開啟設定點選ssh) \n 回到puttygen.exe按save private key即可 \n 再開啟putty \n Host Name輸入github.com \n Saved Sessions輸入自己的學號 \n \n 點選proxy改設定 \n \n 再點選ssh內的Auth裡面Credentials \n \n 匯出即可', 'tags': '', 'url': 'ssh.html'}]};